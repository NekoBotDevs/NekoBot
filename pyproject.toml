[project]
name = "nekobot"
version = "1.0.0"
description = "智能聊天机器人框架"
authors = [
    {name = "NekoBot Devs", email = "dev@nekobot.dev"}
]
readme = "Readme.md"
requires-python = ">=3.10"
license = {text = "MIT"}

dependencies = [
    "aiohttp>=3.9.0",
    "pydantic~=2.10.3",
    "psutil>=5.8.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "qq-botpy>=1.2.1,<=1.2.1",
    "chardet~=5.1.0",
    "Pillow>=10.0.0",
    "beautifulsoup4>=4.12.0",
    "googlesearch-python>=1.2.0",
    "readability-lxml>=0.8.0",
    "quart>=0.19.0",
    "lxml_html_clean>=0.1.0",
    "colorlog>=6.8.0",
    "aiocqhttp>=1.4.0",
    "pyjwt>=2.8.0",
    "bcrypt>=4.1.0",
    "apscheduler>=3.10.0",
    "docstring_parser>=0.15",
    "aiodocker>=0.21.0",
    "silk-python>=0.2.7,<=0.2.7",
    "lark-oapi>=1.2.0",
    "ormsgpack>=1.5.0",
    "cryptography>=41.0.0",
    "dashscope>=1.14.0",
    "python-telegram-bot>=20.0",
    "wechatpy>=1.8.0",
    "dingtalk-stream>=0.5.0",
    "defusedxml>=0.7.0",
    "mcp>=0.9.0",
    "certifi>=2023.7.0",
    "pip>=23.0.0",
    "telegramify-markdown>=0.1.0",
    "google-genai>=0.2.0",
    "click>=8.1.0",
    "filelock>=3.13.0",
    "watchfiles>=0.21.0",
    "websockets>=12.0",
    "faiss-cpu>=1.7.0",
    "aiosqlite>=0.19.0",
    "py-cord>=2.6.1",
    "slack-sdk>=3.26.0",
    "pydub>=0.25.0",
    "sqlmodel>=0.0.14",
    "deprecated>=1.2.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "pyjson5>=1.6.0",
    "quart-cors>=0.7.0",
    "requests>=2.31.0",
    "PyYAML>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
]

[project.scripts]
nekobot = "main:main"
nekobot-cli = "nekobot.cli.commands:cli"

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["nekobot"]

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
    ".venv",
    "venv",
    "env",
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
select = ["F", "E", "W", "ASYNC", "C4", "Q"]
ignore = ["F403", "F405", "E501", "ASYNC230"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
